#!/usr/bin/env bash
# configure web-02 to be identical to web-01
# The name of the custom HTTP header must be X-Served-By
# The value of the custom HTTP header must be the hostname of the server Nginx is running on

sudo apt-get -y update

sudo apt-get -y install nginx

# is used to allow incoming connections to the Nginx HTTP server through the firewall through port 80. using the ufw (Uncomplicated Firewall) command-line tool.
sudo ufw allow 'Nginx HTTP'

# change the owner of the /var/www directory to the current user recursively. To allow modification of the files in the directory.
sudo chown -R $USER /var/www

# change the owner of the /etc/nginx/sites-available/defaul/etc/nginx/sites-available/default,to enable modification of the config file.
sudo chown -R $USER /etc/nginx/sites-available/default

# Making a backup of the default file, in case something goes wrong
sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.bak

# set up a page containing "Hello World" when queried at the root with a curl GET request.
echo 'Hello World!' > /var/www/html/index.nginx-debian.html

# set up a content for error 404 html page.
echo "Ceci n'est pas une page" >> /var/www/html/error_404.html

sudo service nginx start

# Setting up /redirect_me to a permanent redirect to https://twitter.com/ai_optimizer
sudo sed -i '24i\rewrite ^/redirect_me https://twitter.com/ai_optimizer permanent;' /etc/nginx/sites-available/default

# Set up error 404 page location
sudo sed -i '25i\	error_page 404 /error_404.html;' /etc/nginx/sites-available/default

# Setting up custom HTTP header called 'X-Served-By' to all responses, containing the hostname of the server that served the request.
sudo sed -i '49i\\tadd_header X-Served-By \$hostname;' /etc/nginx/sites-available/default

sudo service nginx restart